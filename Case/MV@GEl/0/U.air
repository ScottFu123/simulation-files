/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      binary;
    class       volVectorField;
    location    "0";
    object      U.air;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    inletone
    {
	type            codedFixedValue;
        value           uniform (0 0 0);
	name		uMine;
	code
	#{
		const vectorField Cf=patch().Cf();
		vectorField uMine(Cf.size());
		forAll(Cf,faceI)
		{
			scalar t = this->db().time().value();
			scalar PI=3.1415926535;
			scalar U_0=0.64;
			uMine[faceI]=vector(0, 0, U_0*sin(2.0/3.0*PI*(t)));
		}

		operator==(uMine);
    	#};
    }
    
    inlettwo
    {
	type            codedFixedValue;
        value           uniform (0 0 0);
	name		uMine;
	code
	#{
		const vectorField Cf=patch().Cf();
		vectorField uMine(Cf.size());
		forAll(Cf,faceI)
		{
			scalar t = this->db().time().value();
			scalar PI=3.1415926535;
			scalar U_0=0.64;
			uMine[faceI]=vector(0, 0, U_0*sin(2.0/3.0*PI*(t)));
		}

		operator==(uMine);
    	#};
    }

    outlet
    {
        type            pressureInletOutletVelocity;
        phi             phi.air;
        inletValue      uniform (0 0 0);
        value           uniform (0 0 0);
    }

    rock
    {
        type            noSlip;
    }
}


// ************************************************************************* //
